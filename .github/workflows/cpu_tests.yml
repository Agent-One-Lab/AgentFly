name: CPU-only Unit Tests (agents)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-alfworld-env:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('agents/requirements_test.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies (main repo)
        run: |
          pip install -r agents/requirements_test.txt
          pip install datasets
      - name: Cache AgentFly cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/AgentFly
          key: ${{ runner.os }}-agentfly-cache
          restore-keys: |
            ${{ runner.os }}-agentfly-cache
      - name: Cache Enroot packages
        uses: actions/cache@v4
        with:
          path: ~/enroot-packages
          key: ${{ runner.os }}-enroot-3.5.0
          restore-keys: |
            ${{ runner.os }}-enroot-
      - name: install enroot
        run: |
          mkdir -p ~/enroot-packages
          cd ~/enroot-packages
          arch=$(dpkg --print-architecture)
          if [ ! -f enroot_3.5.0-1_${arch}.deb ]; then
            curl -fSsL -O https://github.com/NVIDIA/enroot/releases/download/v3.5.0/enroot_3.5.0-1_${arch}.deb
            curl -fSsL -O https://github.com/NVIDIA/enroot/releases/download/v3.5.0/enroot+caps_3.5.0-1_${arch}.deb
          fi
          sudo apt-get update
          sudo apt-get install -y ./*.deb
      - name: Run ALFWorld env tests
        run: |
          cd agents
          python -m pytest tests/unit/envs/test_alfworld_env.py

  test-code-env:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('agents/requirements_test.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies (main repo)
        run: |
          pip install -r agents/requirements_test.txt
          pip install datasets
      - name: Cache AgentFly cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/AgentFly
          key: ${{ runner.os }}-agentfly-cache
          restore-keys: |
            ${{ runner.os }}-agentfly-cache
      - name: Cache Enroot packages
        uses: actions/cache@v4
        with:
          path: ~/enroot-packages
          key: ${{ runner.os }}-enroot-3.5.0
          restore-keys: |
            ${{ runner.os }}-enroot-
      - name: install enroot
        run: |
          mkdir -p ~/enroot-packages
          cd ~/enroot-packages
          arch=$(dpkg --print-architecture)
          if [ ! -f enroot_3.5.0-1_${arch}.deb ]; then
            curl -fSsL -O https://github.com/NVIDIA/enroot/releases/download/v3.5.0/enroot_3.5.0-1_${arch}.deb
            curl -fSsL -O https://github.com/NVIDIA/enroot/releases/download/v3.5.0/enroot+caps_3.5.0-1_${arch}.deb
          fi
          sudo apt-get update
          sudo apt-get install -y ./*.deb
      - name: Run code env tests
        run: |
          cd agents
          python -m pytest tests/unit/envs/test_code_env.py
          